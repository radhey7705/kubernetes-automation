- hosts: all
  tasks:
   - name: creating user
     user:
        name: user
        group: sudo
   - name: update apt
     shell: apt update
   - name: install apt-transport-https
     apt:
       name: apt-transport-https
       state: present
       update_cache: true
   - name: install ca-certificates
     apt:
       name: ca-certificates
       state: present
       update_cache: true
   - name: install curl
     apt:
       name: curl
       state: present
       update_cache: true
   - name: install gnupg2
     apt:
       name: gnupg2
       state: present
       update_cache: true
   - name: install software-properties-common
     apt:
       name: software-properties-common
       state: present
       update_cache: true
   - name: "add the GPG key" 
     shell: "curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -"
   - name: "check the apt key" 
     shell: "apt-key fingerprint 0EBFCD88"
   - name: 
     shell: add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
   - name: update apt
     shell: apt update
   - name: install Docker-ce
     apt:
       name: docker-ce
       state: present
       update_cache: true
   - name: start docker service
     service:
         name: docker
         state: restarted
         enabled: yes
   - name: update apt
     shell: apt update
   - name: stop auto-updation of docker-ce
     shell: apt-mark hold docker-ce
   - name: install APT Transport HTTPS
     apt:
       name: apt-transport-https
       state: present
   - name: add Kubernetes apt-key
     apt_key:
       url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
       state: present
   - name: add Kubernetes APT repository
     apt_repository:
      repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: 'kubernetes'
   - name: update apt
     shell: apt update
   - name: install kubelet
     apt:
       name: kubelet
       state: present
       update_cache: true
   - name: install kubeadm
     apt:
       name: kubeadm
       state: present
   - name: stop auto update
     shell: apt-mark hold  kubelet kubeadm

- hosts: master
  tasks:
   - name: install kubectl
     apt:
       name: kubectl
       state: present
       force: yes
   - name: stop auto update kubectl
     shell: apt-mark hold kubectl
   - name:  pulling kubernetes images 
     shell: kubeadm config images pull
   - name: initializing kubernetes
     shell: kubeadm init --pod-network-cidr=255.255.0.0/16
     ignore_errors: yes
   - name: creating file
     shell: mkdir /root/.kube 
     ignore_errors: yes
   - name: copying the admin.conf file in .kube directory
     shell: cp -i /etc/kubernetes/admin.conf /root/.kube/config
   - name: changing ownership of config file
     shell: chown $(id -u):$(id -g) /root/.kube/config
     #   - name: setting up path for kubeconfig
     # shell: export KUBECONFIG=/root/.kube/config
     # - name: update apt
     #  shell: "echo 'export KUBECONFIG=/home/user/.kube/config' >> /etc/profile && echo 'export KUBECONFIG=/home/user/.kube/config' >> /etc/bash.bashrc"
   - name: copying file etcd.yaml 
     copy:
        src: etcd.yaml
        dest: /root/etcd.yaml
        owner: root
        group: root
        mode: 0644
   - name:  copying file calico.yaml 
     copy:
        src: calico.yaml
        dest: /root/calico.yaml
        owner: root
        group: root
        mode: 0644
   - name: Install an etcd instance 
     shell: "kubectl apply -f https://docs.projectcalico.org/v3.5/getting-started/kubernetes/installation/hosted/etcd.yaml"
   - name: Install Calico 
     shell: "kubectl apply -f https://docs.projectcalico.org/v3.5/getting-started/kubernetes/installation/hosted/calico.yaml"
